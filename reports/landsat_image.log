Traceback (most recent call last):
  File "/home/phil/mini38/envs/work/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/phil/mini38/envs/work/lib/python3.8/site-packages/nbclient/client.py", line 1082, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/phil/mini38/envs/work/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/phil/mini38/envs/work/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/home/phil/mini38/envs/work/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/home/phil/mini38/envs/work/lib/python3.8/site-packages/nbclient/client.py", line 535, in async_execute
    await self.async_execute_cell(
  File "/home/phil/mini38/envs/work/lib/python3.8/site-packages/nbclient/client.py", line 827, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/phil/mini38/envs/work/lib/python3.8/site-packages/nbclient/client.py", line 735, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import requests
from bs4 import BeautifulSoup
import os
import shutil


# Request the html text of the download_url from the amazon server. 
# download_url example: https://landsat-pds.s3.amazonaws.com/c1/L8/139/045/LC08_L1TP_139045_20170304_20170316_01_T1/index.html
response = requests.get(scene_url)
print(f"response: {response}, {type(response)}")
landsat_path = Path() / 'landsat_scenes' / my_scene.iloc[0].productId
landsat_path.mkdir(parents=True,exist_ok=True)
# # If the response status code is fine (200)
if response.status_code == 200:

    # Import the html to beautiful soup
    html = BeautifulSoup(response.content, 'html.parser')

    # Create the dir where we will put this image files.
    entity_dir = os.path.join(landsat_path, my_scene.iloc[0].productId)
    os.makedirs(entity_dir, exist_ok=True)

    # Second loop: for each band of this image that we find using the html <li> tag
    good_bands = ['B4.TIF', 'B5.TIF']
    good_list = []
    for li in html.find_all('li'):

        # Get the href tag
        the_file = li.find_next('a').get('href')
        for keyword in good_bands:
            if the_file.find(keyword) > 0:
                good_list.append(the_file)
        if the_file.find('MTL.txt') > 0:
            good_list.append(the_file)
    print(f"here is goodlist: {good_list}")
    print(f"here is mtl_file {mtl_file}")
        
download=True
if download:
    for the_file in good_list:
        print(f'  Downloading: {the_file}')

        # Download the files
        # code from: https://stackoverflow.com/a/18043472/5361345
        image_path = scene_url.replace('index.html', the_file)
        print(image_path)
        response = requests.get(image_path, stream=True)

        with open(landsat_path / the_file, 'wb') as output:
            shutil.copyfileobj(response.raw, output)
        del response
    
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
[0;32m<ipython-input-15-6dd16ae17011>[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m             [0mgood_list[0m[0;34m.[0m[0mappend[0m[0;34m([0m[0mthe_file[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m     [0mprint[0m[0;34m([0m[0;34mf"here is goodlist: {good_list}"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m     [0mprint[0m[0;34m([0m[0;34mf"here is mtl_file {mtl_file}"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m [0mdownload[0m[0;34m=[0m[0;32mTrue[0m[0;34m[0m[0;34m[0m[0m

[0;31mNameError[0m: name 'mtl_file' is not defined
NameError: name 'mtl_file' is not defined

